#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace cabme.data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="content")]
	public partial class contentDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertTaxi(Taxi instance);
    partial void UpdateTaxi(Taxi instance);
    partial void DeleteTaxi(Taxi instance);
    partial void InsertContactDetail(ContactDetail instance);
    partial void UpdateContactDetail(ContactDetail instance);
    partial void DeleteContactDetail(ContactDetail instance);
    partial void InsertSuburb(Suburb instance);
    partial void UpdateSuburb(Suburb instance);
    partial void DeleteSuburb(Suburb instance);
    partial void InsertBooking(Booking instance);
    partial void UpdateBooking(Booking instance);
    partial void DeleteBooking(Booking instance);
    partial void InsertRole(Role instance);
    partial void UpdateRole(Role instance);
    partial void DeleteRole(Role instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertReview(Review instance);
    partial void UpdateReview(Review instance);
    partial void DeleteReview(Review instance);
    #endregion
		
		public contentDataContext() : 
				base(global::cabme.data.Properties.Settings.Default.contentConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public contentDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public contentDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public contentDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public contentDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Taxi> Taxis
		{
			get
			{
				return this.GetTable<Taxi>();
			}
		}
		
		public System.Data.Linq.Table<ContactDetail> ContactDetails
		{
			get
			{
				return this.GetTable<ContactDetail>();
			}
		}
		
		public System.Data.Linq.Table<Suburb> Suburbs
		{
			get
			{
				return this.GetTable<Suburb>();
			}
		}
		
		public System.Data.Linq.Table<Booking> Bookings
		{
			get
			{
				return this.GetTable<Booking>();
			}
		}
		
		public System.Data.Linq.Table<UserTaxi> UserTaxis
		{
			get
			{
				return this.GetTable<UserTaxi>();
			}
		}
		
		public System.Data.Linq.Table<Role> Roles
		{
			get
			{
				return this.GetTable<Role>();
			}
		}
		
		public System.Data.Linq.Table<UserRole> UserRoles
		{
			get
			{
				return this.GetTable<UserRole>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<Review> Reviews
		{
			get
			{
				return this.GetTable<Review>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Taxi")]
	public partial class Taxi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _PhoneNumber;
		
		private int _RatePerKm;
		
		private int _MinRate;
		
		private short _Units;
		
		private System.DateTime _StartOfService;
		
		private System.DateTime _EndOfService;
		
		private bool _Is24HService;
		
		private short _FleetSize;
		
		private EntitySet<ContactDetail> _ContactDetails;
		
		private EntitySet<Review> _Reviews;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnRatePerKmChanging(int value);
    partial void OnRatePerKmChanged();
    partial void OnMinRateChanging(int value);
    partial void OnMinRateChanged();
    partial void OnUnitsChanging(short value);
    partial void OnUnitsChanged();
    partial void OnStartOfServiceChanging(System.DateTime value);
    partial void OnStartOfServiceChanged();
    partial void OnEndOfServiceChanging(System.DateTime value);
    partial void OnEndOfServiceChanged();
    partial void OnIs24HServiceChanging(bool value);
    partial void OnIs24HServiceChanged();
    partial void OnFleetSizeChanging(short value);
    partial void OnFleetSizeChanged();
    #endregion
		
		public Taxi()
		{
			this._ContactDetails = new EntitySet<ContactDetail>(new Action<ContactDetail>(this.attach_ContactDetails), new Action<ContactDetail>(this.detach_ContactDetails));
			this._Reviews = new EntitySet<Review>(new Action<Review>(this.attach_Reviews), new Action<Review>(this.detach_Reviews));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(60) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RatePerKm", DbType="Int NOT NULL")]
		public int RatePerKm
		{
			get
			{
				return this._RatePerKm;
			}
			set
			{
				if ((this._RatePerKm != value))
				{
					this.OnRatePerKmChanging(value);
					this.SendPropertyChanging();
					this._RatePerKm = value;
					this.SendPropertyChanged("RatePerKm");
					this.OnRatePerKmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinRate", DbType="Int NOT NULL")]
		public int MinRate
		{
			get
			{
				return this._MinRate;
			}
			set
			{
				if ((this._MinRate != value))
				{
					this.OnMinRateChanging(value);
					this.SendPropertyChanging();
					this._MinRate = value;
					this.SendPropertyChanged("MinRate");
					this.OnMinRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Units", DbType="SmallInt NOT NULL")]
		public short Units
		{
			get
			{
				return this._Units;
			}
			set
			{
				if ((this._Units != value))
				{
					this.OnUnitsChanging(value);
					this.SendPropertyChanging();
					this._Units = value;
					this.SendPropertyChanged("Units");
					this.OnUnitsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartOfService", DbType="DateTime NOT NULL")]
		public System.DateTime StartOfService
		{
			get
			{
				return this._StartOfService;
			}
			set
			{
				if ((this._StartOfService != value))
				{
					this.OnStartOfServiceChanging(value);
					this.SendPropertyChanging();
					this._StartOfService = value;
					this.SendPropertyChanged("StartOfService");
					this.OnStartOfServiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndOfService", DbType="DateTime NOT NULL")]
		public System.DateTime EndOfService
		{
			get
			{
				return this._EndOfService;
			}
			set
			{
				if ((this._EndOfService != value))
				{
					this.OnEndOfServiceChanging(value);
					this.SendPropertyChanging();
					this._EndOfService = value;
					this.SendPropertyChanged("EndOfService");
					this.OnEndOfServiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Is24HService", DbType="Bit NOT NULL")]
		public bool Is24HService
		{
			get
			{
				return this._Is24HService;
			}
			set
			{
				if ((this._Is24HService != value))
				{
					this.OnIs24HServiceChanging(value);
					this.SendPropertyChanging();
					this._Is24HService = value;
					this.SendPropertyChanged("Is24HService");
					this.OnIs24HServiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FleetSize", DbType="SmallInt NOT NULL")]
		public short FleetSize
		{
			get
			{
				return this._FleetSize;
			}
			set
			{
				if ((this._FleetSize != value))
				{
					this.OnFleetSizeChanging(value);
					this.SendPropertyChanging();
					this._FleetSize = value;
					this.SendPropertyChanged("FleetSize");
					this.OnFleetSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Taxi_ContactDetail", Storage="_ContactDetails", ThisKey="Id", OtherKey="TaxiId")]
		public EntitySet<ContactDetail> ContactDetails
		{
			get
			{
				return this._ContactDetails;
			}
			set
			{
				this._ContactDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Taxi_Review", Storage="_Reviews", ThisKey="Id", OtherKey="TaxiId")]
		public EntitySet<Review> Reviews
		{
			get
			{
				return this._Reviews;
			}
			set
			{
				this._Reviews.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ContactDetails(ContactDetail entity)
		{
			this.SendPropertyChanging();
			entity.Taxi = this;
		}
		
		private void detach_ContactDetails(ContactDetail entity)
		{
			this.SendPropertyChanging();
			entity.Taxi = null;
		}
		
		private void attach_Reviews(Review entity)
		{
			this.SendPropertyChanging();
			entity.Taxi = this;
		}
		
		private void detach_Reviews(Review entity)
		{
			this.SendPropertyChanging();
			entity.Taxi = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ContactDetail")]
	public partial class ContactDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _TaxiId;
		
		private string _PhoneNumber;
		
		private string _BookingEmail;
		
		private string _BookingSMS;
		
		private bool _UseEmail;
		
		private EntityRef<Taxi> _Taxi;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTaxiIdChanging(int value);
    partial void OnTaxiIdChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnBookingEmailChanging(string value);
    partial void OnBookingEmailChanged();
    partial void OnBookingSMSChanging(string value);
    partial void OnBookingSMSChanged();
    partial void OnUseEmailChanging(bool value);
    partial void OnUseEmailChanged();
    #endregion
		
		public ContactDetail()
		{
			this._Taxi = default(EntityRef<Taxi>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxiId", DbType="Int NOT NULL")]
		public int TaxiId
		{
			get
			{
				return this._TaxiId;
			}
			set
			{
				if ((this._TaxiId != value))
				{
					if (this._Taxi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTaxiIdChanging(value);
					this.SendPropertyChanging();
					this._TaxiId = value;
					this.SendPropertyChanged("TaxiId");
					this.OnTaxiIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="VarChar(20)")]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookingEmail", DbType="VarChar(255)")]
		public string BookingEmail
		{
			get
			{
				return this._BookingEmail;
			}
			set
			{
				if ((this._BookingEmail != value))
				{
					this.OnBookingEmailChanging(value);
					this.SendPropertyChanging();
					this._BookingEmail = value;
					this.SendPropertyChanged("BookingEmail");
					this.OnBookingEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookingSMS", DbType="VarChar(20)")]
		public string BookingSMS
		{
			get
			{
				return this._BookingSMS;
			}
			set
			{
				if ((this._BookingSMS != value))
				{
					this.OnBookingSMSChanging(value);
					this.SendPropertyChanging();
					this._BookingSMS = value;
					this.SendPropertyChanged("BookingSMS");
					this.OnBookingSMSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseEmail", DbType="Bit NOT NULL")]
		public bool UseEmail
		{
			get
			{
				return this._UseEmail;
			}
			set
			{
				if ((this._UseEmail != value))
				{
					this.OnUseEmailChanging(value);
					this.SendPropertyChanging();
					this._UseEmail = value;
					this.SendPropertyChanged("UseEmail");
					this.OnUseEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Taxi_ContactDetail", Storage="_Taxi", ThisKey="TaxiId", OtherKey="Id", IsForeignKey=true)]
		public Taxi Taxi
		{
			get
			{
				return this._Taxi.Entity;
			}
			set
			{
				Taxi previousValue = this._Taxi.Entity;
				if (((previousValue != value) 
							|| (this._Taxi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Taxi.Entity = null;
						previousValue.ContactDetails.Remove(this);
					}
					this._Taxi.Entity = value;
					if ((value != null))
					{
						value.ContactDetails.Add(this);
						this._TaxiId = value.Id;
					}
					else
					{
						this._TaxiId = default(int);
					}
					this.SendPropertyChanged("Taxi");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Suburb")]
	public partial class Suburb : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _City;
		
		private string _PostalCode;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnPostalCodeChanging(string value);
    partial void OnPostalCodeChanged();
    #endregion
		
		public Suburb()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostalCode", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string PostalCode
		{
			get
			{
				return this._PostalCode;
			}
			set
			{
				if ((this._PostalCode != value))
				{
					this.OnPostalCodeChanging(value);
					this.SendPropertyChanging();
					this._PostalCode = value;
					this.SendPropertyChanged("PostalCode");
					this.OnPostalCodeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Booking")]
	public partial class Booking : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _PhoneNumber;
		
		private short _NumberOfPeople;
		
		private System.DateTime _PickupTime;
		
		private string _AddrFrom;
		
		private System.Nullable<int> _LatitudeFrom;
		
		private System.Nullable<int> _LongitudeFrom;
		
		private string _AddrTo;
		
		private System.Nullable<int> _LatitudeTo;
		
		private System.Nullable<int> _LongitudeTo;
		
		private int _ComputedDistance;
		
		private int _EstimatedPrice;
		
		private bool _Active;
		
		private bool _Confirmed;
		
		private System.Nullable<int> _TaxiId;
		
		private System.DateTime _LastModified;
		
		private System.DateTime _Created;
		
		private string _Hash;
		
		private EntitySet<Review> _Reviews;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnNumberOfPeopleChanging(short value);
    partial void OnNumberOfPeopleChanged();
    partial void OnPickupTimeChanging(System.DateTime value);
    partial void OnPickupTimeChanged();
    partial void OnAddrFromChanging(string value);
    partial void OnAddrFromChanged();
    partial void OnLatitudeFromChanging(System.Nullable<int> value);
    partial void OnLatitudeFromChanged();
    partial void OnLongitudeFromChanging(System.Nullable<int> value);
    partial void OnLongitudeFromChanged();
    partial void OnAddrToChanging(string value);
    partial void OnAddrToChanged();
    partial void OnLatitudeToChanging(System.Nullable<int> value);
    partial void OnLatitudeToChanged();
    partial void OnLongitudeToChanging(System.Nullable<int> value);
    partial void OnLongitudeToChanged();
    partial void OnComputedDistanceChanging(int value);
    partial void OnComputedDistanceChanged();
    partial void OnEstimatedPriceChanging(int value);
    partial void OnEstimatedPriceChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    partial void OnConfirmedChanging(bool value);
    partial void OnConfirmedChanged();
    partial void OnTaxiIdChanging(System.Nullable<int> value);
    partial void OnTaxiIdChanged();
    partial void OnLastModifiedChanging(System.DateTime value);
    partial void OnLastModifiedChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnHashChanging(string value);
    partial void OnHashChanged();
    #endregion
		
		public Booking()
		{
			this._Reviews = new EntitySet<Review>(new Action<Review>(this.attach_Reviews), new Action<Review>(this.detach_Reviews));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(60)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfPeople", DbType="SmallInt NOT NULL")]
		public short NumberOfPeople
		{
			get
			{
				return this._NumberOfPeople;
			}
			set
			{
				if ((this._NumberOfPeople != value))
				{
					this.OnNumberOfPeopleChanging(value);
					this.SendPropertyChanging();
					this._NumberOfPeople = value;
					this.SendPropertyChanged("NumberOfPeople");
					this.OnNumberOfPeopleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PickupTime", DbType="DateTime NOT NULL")]
		public System.DateTime PickupTime
		{
			get
			{
				return this._PickupTime;
			}
			set
			{
				if ((this._PickupTime != value))
				{
					this.OnPickupTimeChanging(value);
					this.SendPropertyChanging();
					this._PickupTime = value;
					this.SendPropertyChanged("PickupTime");
					this.OnPickupTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddrFrom", DbType="VarChar(400) NOT NULL", CanBeNull=false)]
		public string AddrFrom
		{
			get
			{
				return this._AddrFrom;
			}
			set
			{
				if ((this._AddrFrom != value))
				{
					this.OnAddrFromChanging(value);
					this.SendPropertyChanging();
					this._AddrFrom = value;
					this.SendPropertyChanged("AddrFrom");
					this.OnAddrFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LatitudeFrom", DbType="Int")]
		public System.Nullable<int> LatitudeFrom
		{
			get
			{
				return this._LatitudeFrom;
			}
			set
			{
				if ((this._LatitudeFrom != value))
				{
					this.OnLatitudeFromChanging(value);
					this.SendPropertyChanging();
					this._LatitudeFrom = value;
					this.SendPropertyChanged("LatitudeFrom");
					this.OnLatitudeFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LongitudeFrom", DbType="Int")]
		public System.Nullable<int> LongitudeFrom
		{
			get
			{
				return this._LongitudeFrom;
			}
			set
			{
				if ((this._LongitudeFrom != value))
				{
					this.OnLongitudeFromChanging(value);
					this.SendPropertyChanging();
					this._LongitudeFrom = value;
					this.SendPropertyChanged("LongitudeFrom");
					this.OnLongitudeFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddrTo", DbType="VarChar(400)")]
		public string AddrTo
		{
			get
			{
				return this._AddrTo;
			}
			set
			{
				if ((this._AddrTo != value))
				{
					this.OnAddrToChanging(value);
					this.SendPropertyChanging();
					this._AddrTo = value;
					this.SendPropertyChanged("AddrTo");
					this.OnAddrToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LatitudeTo", DbType="Int")]
		public System.Nullable<int> LatitudeTo
		{
			get
			{
				return this._LatitudeTo;
			}
			set
			{
				if ((this._LatitudeTo != value))
				{
					this.OnLatitudeToChanging(value);
					this.SendPropertyChanging();
					this._LatitudeTo = value;
					this.SendPropertyChanged("LatitudeTo");
					this.OnLatitudeToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LongitudeTo", DbType="Int")]
		public System.Nullable<int> LongitudeTo
		{
			get
			{
				return this._LongitudeTo;
			}
			set
			{
				if ((this._LongitudeTo != value))
				{
					this.OnLongitudeToChanging(value);
					this.SendPropertyChanging();
					this._LongitudeTo = value;
					this.SendPropertyChanged("LongitudeTo");
					this.OnLongitudeToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComputedDistance", DbType="Int NOT NULL")]
		public int ComputedDistance
		{
			get
			{
				return this._ComputedDistance;
			}
			set
			{
				if ((this._ComputedDistance != value))
				{
					this.OnComputedDistanceChanging(value);
					this.SendPropertyChanging();
					this._ComputedDistance = value;
					this.SendPropertyChanged("ComputedDistance");
					this.OnComputedDistanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EstimatedPrice", DbType="Int NOT NULL")]
		public int EstimatedPrice
		{
			get
			{
				return this._EstimatedPrice;
			}
			set
			{
				if ((this._EstimatedPrice != value))
				{
					this.OnEstimatedPriceChanging(value);
					this.SendPropertyChanging();
					this._EstimatedPrice = value;
					this.SendPropertyChanged("EstimatedPrice");
					this.OnEstimatedPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Confirmed", DbType="Bit NOT NULL")]
		public bool Confirmed
		{
			get
			{
				return this._Confirmed;
			}
			set
			{
				if ((this._Confirmed != value))
				{
					this.OnConfirmedChanging(value);
					this.SendPropertyChanging();
					this._Confirmed = value;
					this.SendPropertyChanged("Confirmed");
					this.OnConfirmedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxiId", DbType="Int")]
		public System.Nullable<int> TaxiId
		{
			get
			{
				return this._TaxiId;
			}
			set
			{
				if ((this._TaxiId != value))
				{
					this.OnTaxiIdChanging(value);
					this.SendPropertyChanging();
					this._TaxiId = value;
					this.SendPropertyChanged("TaxiId");
					this.OnTaxiIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModified", DbType="DateTime NOT NULL")]
		public System.DateTime LastModified
		{
			get
			{
				return this._LastModified;
			}
			set
			{
				if ((this._LastModified != value))
				{
					this.OnLastModifiedChanging(value);
					this.SendPropertyChanging();
					this._LastModified = value;
					this.SendPropertyChanged("LastModified");
					this.OnLastModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTime NOT NULL")]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hash", DbType="VarChar(128)")]
		public string Hash
		{
			get
			{
				return this._Hash;
			}
			set
			{
				if ((this._Hash != value))
				{
					this.OnHashChanging(value);
					this.SendPropertyChanging();
					this._Hash = value;
					this.SendPropertyChanged("Hash");
					this.OnHashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Booking_Review", Storage="_Reviews", ThisKey="Id", OtherKey="BookingId")]
		public EntitySet<Review> Reviews
		{
			get
			{
				return this._Reviews;
			}
			set
			{
				this._Reviews.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Reviews(Review entity)
		{
			this.SendPropertyChanging();
			entity.Booking = this;
		}
		
		private void detach_Reviews(Review entity)
		{
			this.SendPropertyChanging();
			entity.Booking = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserTaxi")]
	public partial class UserTaxi
	{
		
		private int _UserId;
		
		private int _TaxiId;
		
		public UserTaxi()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxiId", DbType="Int NOT NULL")]
		public int TaxiId
		{
			get
			{
				return this._TaxiId;
			}
			set
			{
				if ((this._TaxiId != value))
				{
					this._TaxiId = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Role")]
	public partial class Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public Role()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(32) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserRole")]
	public partial class UserRole
	{
		
		private int _UserId;
		
		private int _RoleId;
		
		public UserRole()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="Int NOT NULL")]
		public int RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this._RoleId = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[User]")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Password;
		
		private string _Email;
		
		private System.DateTime _Created;
		
		private System.DateTime _LastModified;
		
		private System.Nullable<System.DateTime> _LastAccess;
		
		private string _PhoneNumber;
		
		private EntitySet<Review> _Reviews;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnLastModifiedChanging(System.DateTime value);
    partial void OnLastModifiedChanged();
    partial void OnLastAccessChanging(System.Nullable<System.DateTime> value);
    partial void OnLastAccessChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    #endregion
		
		public User()
		{
			this._Reviews = new EntitySet<Review>(new Action<Review>(this.attach_Reviews), new Action<Review>(this.detach_Reviews));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(128) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTime NOT NULL")]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModified", DbType="DateTime NOT NULL")]
		public System.DateTime LastModified
		{
			get
			{
				return this._LastModified;
			}
			set
			{
				if ((this._LastModified != value))
				{
					this.OnLastModifiedChanging(value);
					this.SendPropertyChanging();
					this._LastModified = value;
					this.SendPropertyChanged("LastModified");
					this.OnLastModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastAccess", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastAccess
		{
			get
			{
				return this._LastAccess;
			}
			set
			{
				if ((this._LastAccess != value))
				{
					this.OnLastAccessChanging(value);
					this.SendPropertyChanging();
					this._LastAccess = value;
					this.SendPropertyChanged("LastAccess");
					this.OnLastAccessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="VarChar(20)")]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Review", Storage="_Reviews", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<Review> Reviews
		{
			get
			{
				return this._Reviews;
			}
			set
			{
				this._Reviews.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Reviews(Review entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Reviews(Review entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Review")]
	public partial class Review : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _UserId;
		
		private int _BookingId;
		
		private int _TaxiId;
		
		private byte _Rating;
		
		private string _Comment;
		
		private System.DateTime _DateCreated;
		
		private System.DateTime _DateLastModified;
		
		private bool _Active;
		
		private EntityRef<Booking> _Booking;
		
		private EntityRef<Taxi> _Taxi;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnBookingIdChanging(int value);
    partial void OnBookingIdChanged();
    partial void OnTaxiIdChanging(int value);
    partial void OnTaxiIdChanged();
    partial void OnRatingChanging(byte value);
    partial void OnRatingChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnDateLastModifiedChanging(System.DateTime value);
    partial void OnDateLastModifiedChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public Review()
		{
			this._Booking = default(EntityRef<Booking>);
			this._Taxi = default(EntityRef<Taxi>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookingId", DbType="Int NOT NULL")]
		public int BookingId
		{
			get
			{
				return this._BookingId;
			}
			set
			{
				if ((this._BookingId != value))
				{
					if (this._Booking.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBookingIdChanging(value);
					this.SendPropertyChanging();
					this._BookingId = value;
					this.SendPropertyChanged("BookingId");
					this.OnBookingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxiId", DbType="Int NOT NULL")]
		public int TaxiId
		{
			get
			{
				return this._TaxiId;
			}
			set
			{
				if ((this._TaxiId != value))
				{
					if (this._Taxi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTaxiIdChanging(value);
					this.SendPropertyChanging();
					this._TaxiId = value;
					this.SendPropertyChanged("TaxiId");
					this.OnTaxiIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rating", DbType="TinyInt NOT NULL")]
		public byte Rating
		{
			get
			{
				return this._Rating;
			}
			set
			{
				if ((this._Rating != value))
				{
					this.OnRatingChanging(value);
					this.SendPropertyChanging();
					this._Rating = value;
					this.SendPropertyChanged("Rating");
					this.OnRatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="VarChar(300)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateLastModified", DbType="DateTime NOT NULL")]
		public System.DateTime DateLastModified
		{
			get
			{
				return this._DateLastModified;
			}
			set
			{
				if ((this._DateLastModified != value))
				{
					this.OnDateLastModifiedChanging(value);
					this.SendPropertyChanging();
					this._DateLastModified = value;
					this.SendPropertyChanged("DateLastModified");
					this.OnDateLastModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Booking_Review", Storage="_Booking", ThisKey="BookingId", OtherKey="Id", IsForeignKey=true)]
		public Booking Booking
		{
			get
			{
				return this._Booking.Entity;
			}
			set
			{
				Booking previousValue = this._Booking.Entity;
				if (((previousValue != value) 
							|| (this._Booking.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Booking.Entity = null;
						previousValue.Reviews.Remove(this);
					}
					this._Booking.Entity = value;
					if ((value != null))
					{
						value.Reviews.Add(this);
						this._BookingId = value.Id;
					}
					else
					{
						this._BookingId = default(int);
					}
					this.SendPropertyChanged("Booking");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Taxi_Review", Storage="_Taxi", ThisKey="TaxiId", OtherKey="Id", IsForeignKey=true)]
		public Taxi Taxi
		{
			get
			{
				return this._Taxi.Entity;
			}
			set
			{
				Taxi previousValue = this._Taxi.Entity;
				if (((previousValue != value) 
							|| (this._Taxi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Taxi.Entity = null;
						previousValue.Reviews.Remove(this);
					}
					this._Taxi.Entity = value;
					if ((value != null))
					{
						value.Reviews.Add(this);
						this._TaxiId = value.Id;
					}
					else
					{
						this._TaxiId = default(int);
					}
					this.SendPropertyChanged("Taxi");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Review", Storage="_User", ThisKey="UserId", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Reviews.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Reviews.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
